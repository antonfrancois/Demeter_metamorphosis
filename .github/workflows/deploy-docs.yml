name: Deploy Sphinx Documentation

on:
  push:
    branches:
      - main  # Branche principale où vous travaillez

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install sphinx sphinx_rtd_theme sphinx-gallery sphinx-math-dollar
          pip install -e .
          pip install -m build bump2version

      - name: check where we are
        run: |
          pwd & ls
          echo "> saved optim:"
          ls saved_optim/

      - name: Bump version
        run: |
          bump2version patch --allow-dirty
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get new version
        id: get_new_version
        run: echo "new_version=$(bump2version --dry-run --list | grep new_version= | sed -r 's/^.*=//')" >> $GITHUB_ENV

      - name: Update README version
        run: |
          python update_readme_version.py ${{ env.new_version }}

      - name: Build package
        run: python -m build

      - name: Publish package
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m pip install twine
          python -m twine upload dist/*

      - name: Build documentation
        run: |
          sphinx-apidoc -o docs/source/ src/demeter
          sphinx-build -b html docs/source/ docs/build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/build  # Dossier généré par Sphinx
